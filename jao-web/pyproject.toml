[tool.poetry]
name = "jao_web"
version = "0.1.0"
description = ""
authors = [
    "Anthoni Gleeson <anthoni.gleeson@digital.trade.gov.uk>",
    "Stuart Axon stuart.axon@digital.cabinet-office.gov.uk",
]
readme = "README.md"
license = "MIT"

packages = [{ include = "jao_web", from = "src" }]

[tool.poetry.dependencies]
jao_backend_schemas = "https://github.com/cabinetoffice/co-jao/actions/runs/15420759573/artifacts/3251035110"
python = ">=3.12,<4"
govuk-frontend-django = "0.15.1"
django = ">=5.0.1,<5.0.15"
pandas = "^2.2.2"
python-dotenv = "^1.0.1"
dj-database-url = "^2.1.0"
psycopg = "^3.1.19"
django-webpack-loader = "^3.1.0"
django-components = "^0.102"
django-redis = "^5.4.0"
crispy-forms-gds = "^0.3.1"
plotly = "^5.22.0"
pydantic = "^2.7.4"
httpx = "^0.28.1"
hypercorn = "^0.17.3"
geojson-pydantic = "^1.1.0"
django-async-stream = "^0.3"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
black = { extras = ["jupyter"], version = "^24.3.0" }
nbstripout = "^0.7.1"
pytest = "^8.1.1"
pytest-picked = "^0.5.0"
django-debug-toolbar = "4.2"
pytest-integration-mark = "^0.2.0"
django-extensions = "^3.2.3"
pytest-httpx = "0.35.0"
pytest-django = "^4.9.0"
pytest-asyncio = "^0.23.8"
jupyter = "^1.1.1"
pytest-recording = "^0.13.2"

[tool.poetry.scripts]
manage = "django.core.management:execute_from_command_line"
hypercorn = "hypercorn.__main__:main"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "jao_web.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
pythonpath = "src"
norecursedirs = "src/jao_web/settings"

[tool.isort]
profile = "black"

[tool.djlint]
profile = "django"
indent = "4"
ignore = "H021,H006"
exclude = "node_modules,staticfiles,static"
custom_blocks = "gds_accordion,gds_accordion_item,gds_breadcrumbs,gds_checkboxes,gds_checkbox_conditional,gds_cookie_banner,gds_cookie_banner_message,gds_error_summary,gds_error_summary_error_list_item,gds_footer,gds_footer_nav,gds_footer_meta,gds_header,gds_header_nav_item,gds_phase_banner,gds_summary_list,gds_summary_list_row,gds_summary_list_row_key,gds_summary_list_row_value,gds_summary_list_row_actions,gds_summary_list_row_actions_item,gds_summary_list_card,gds_summary_list_card_actions,gds_summary_list_card_actions_item,gds_tabs,gds_tabs_tab"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
