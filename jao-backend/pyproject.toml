[tool.poetry]
name = "jao_backend"
version = "0.1.2"
description = ""
authors = [
    "Anthoni Gleeson <anthoni.gleeson@digital.trade.gov.uk>",
    "Stuart Axon stuart.axon@digital.cabinet-office.gov.uk",
]
readme = "README.md"
license = "MIT"

packages = [{ include = "jao_backend", from = "src" }]

[tool.poetry.dependencies]
jao-backend-schemas = { url = "https://github.com/cabinetoffice/co-jao/releases/download/v0.0.2/jao_backend_schemas-0.1.0-py3-none-any.whl" }
python = ">=3.12,<=3.13"
govuk-frontend-django = "0.15.1"
django = ">=5.0.1,<5.0.15"
python-dotenv = "^1.0.1"
dj-database-url = "^2.1.0"
django-webpack-loader = "^3.1.0"
django-components = "^0.102"
django-redis = "^5.4.0"
crispy-forms-gds = "^0.3.1"
pydantic = "^2.7.4"
httpx = "^0.28.0"
hypercorn = "^0.17.3"
wagtail = "^7.1"
django-ninja = "^1.3.0"
django-extensions = "^3.2.3"
djantic2 = "^1.0.5"
honcho = "^2.0.0"
celery = "^5.5.3"
flower = "^2.0.1"
celery-singleton = "^0.3.1"
boto3 = "^1.34.64"
pgvector = "^0.4.1"
django-polymorphic = "^3.1.0"
pytest-django = "^4.11.1"
litellm = "^1.76.3"
psycopg2-binary = "^2.9.10"
pytest-unordered = "^0.6.1"
faker = "^37.1.0"
factory-boy = "^3.3.3"
nest-asyncio = "^1.6.0"
mssql-django = "^1.6"
plum-dispatch = "^2.5.7"
bbcode = "^1.1.0"
cachedmethod = "^0.1.0"
cachemethod = "^1.0.0"
structlog = "^25.4.0"
wrapt = "^1.17.3"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
black = { extras = ["jupyter"], version = "^24.3.0" }
nbstripout = "^0.7.1"
pytest = "^8.1.1"
pytest-picked = "^0.5.0"
django-debug-toolbar = "4.2"
jupyter = {extras = ["notebook"], version = "^1.1.1"}
pytest-env = "^1.1.5"
ipython = "^9.4.0"
ipdb = "^0.13.13"
sphinx = "^8.2.3"
sphinx-autodoc-typehints = "^3.2.0"
govuk-tech-docs-sphinx-theme = { url = "https://github.com/stuaxocabinetoffice/govuk-tech-docs-sphinx-theme/releases/download/v1.0.1-alpha.1/govuk_tech_docs_sphinx_theme-1.0.1-py3-none-any.whl" }

[tool.poetry.group.jupyter.dependencies]
jupyter = "^1.1.1"

[tool.poetry.extras]
jupyter = ["jupyter"]

[tool.poetry.scripts]
manage = "django.core.management:execute_from_command_line"
hypercorn = "hypercorn.__main__:main"
docs-build = "jao_backend.scripts:build_docs"
docs-clean = "jao_backend.scripts:clean_docs"
docs-serve = "jao_backend.scripts:serve_docs"

[tool.isort]
profile = "black"

[tool.djlint]
profile = "django"
indent = "4"
ignore = "H021,H006"
exclude = "node_modules,staticfiles,static"
custom_blocks = "gds_accordion,gds_accordion_item,gds_breadcrumbs,gds_checkboxes,gds_checkbox_conditional,gds_cookie_banner,gds_cookie_banner_message,gds_error_summary,gds_error_summary_error_list_item,gds_footer,gds_footer_nav,gds_footer_meta,gds_header,gds_header_nav_item,gds_phase_banner,gds_summary_list,gds_summary_list_row,gds_summary_list_row_key,gds_summary_list_row_value,gds_summary_list_row_actions,gds_summary_list_row_actions_item,gds_summary_list_card,gds_summary_list_card_actions,gds_summary_list_card_actions_item,gds_tabs,gds_tabs_tab"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "jao_backend.settings.test"
env = ["ENV=test"]
pythonpath = ["src"]
