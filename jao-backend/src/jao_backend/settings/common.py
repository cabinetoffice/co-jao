"""
Django settings for job_advert_advisor project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

import dj_database_url

from jao_backend.common.fields import uuidv7
from jao_backend.common.util import is_truthy

IS_DEV_ENVIRONMENT = os.getenv("ENV").lower() == "dev"

ENV = os.environ.get("ENV", "dev").lower()

BASE_DIR = Path(__file__).resolve().parent.parent.parent
PROJECT_DIR = BASE_DIR.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

JAO_BACKEND_ENABLE_HTTP2 = True
JAO_BACKEND_TIMEOUT = os.getenv("JAO_BACKEND_TIMEOUT", 15)
""
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL", "redis://localhost:6379/0")
CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND", "redis://localhost:6379/0")

INSTALLED_APPS = [
    "django_extensions",
    # "django_redis",
    "webpack_loader",
    "govuk_frontend_django",
    "crispy_forms",
    "crispy_forms_gds",
    "jao_backend.common",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "jao_backend.inline_exceptions",
    "jao_backend.home",
    "jao_backend.api",
    "jao_backend.roles",
    "jao_backend.departments",
    "jao_backend.vacancies",
    "jao_backend.application_statistics",
    "jao_backend.embeddings",
    "jao_backend.ingest"
]

if JAO_BACKEND_ENABLE_OLEEO := is_truthy(os.getenv("JAO_BACKEND_ENABLE_OLEEO", "false")):
    INSTALLED_APPS.append("jao_backend.oleeo")


LITELLM_API_BASE = os.environ.get("JAO_BACKEND_LITELLM_API_BASE")
LITELLM_CUSTOM_PROVIDER = os.environ.get("JAO_BACKEND_LITELLM_CUSTOM_PROVIDER")

# Embedding tags:
#
# A piece of data may have different embeddings, identified by a tags with ids
# in UUID7 format (see https://pypi.org/project/uuid-utils/)
#
# models are specified using LiteLLMs format: provider/model:version
# Defaults here are setup for local development with ollama, while
# production.py overrides models with those available in AWS Bedrock.
#

# Use the pytest-dango plugin to run tests, this only applies if running python src/manage.py tests
# Users should usually run pytest directly, e.g: `$ pytest`
TEST_RUNNER = "jao_backend.settings.tests.runner.PytestTestRunner"

# Concatenated job title and responsibilities
EMBEDDING_TAG_JOB_TITLE_RESPONSIBILITIES_ID = uuidv7(hex="0196a2a0-61b9-79e2-9ef7-9988b475dda3")
EMBEDDING_TAG_JOB_TITLE_RESPONSIBILITIES_MODEL = os.environ.get(
    "JAO_EMBEDDER_SUMMARY_RESPONSIBILITIES", "ollama/nomic-embed-text:latest"
)

EMBEDDING_TAGS = {
    EMBEDDING_TAG_JOB_TITLE_RESPONSIBILITIES_ID: {
        # UUID is in UUID7 format, see
        "uuid": EMBEDDING_TAG_JOB_TITLE_RESPONSIBILITIES_ID,
        "name": "job-title-responsibilities",
        "description": "Description for Vacancy Tag 1",
        "model": EMBEDDING_TAG_JOB_TITLE_RESPONSIBILITIES_MODEL,
        "version": 1,
    },
}

MIDDLEWARE = [
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    # "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "django.middleware.security.SecurityMiddleware",
]

ROOT_URLCONF = "urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            # No extra directories are needed, as the app directories are used
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
#

# Note, special characters like in the DATABASE URLs may need to be url escaped, e.g. %23 instead of #
DATABASES = {
    "default": dj_database_url.config(env="JAO_BACKEND_DATABASE_URL"),
}

if JAO_BACKEND_ENABLE_OLEEO:
    DATABASES["oleeo"] = dj_database_url.config(env="JAO_BACKEND_OLEEO_DATABASE_URL")
    DATABASE_ROUTERS = ['jao_backend.common.routers.router.OleeoRouter']

# Session engine, use the default database backed sessions
SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_CACHE_ALIAS = "default"

# Use HTTPOnly cookies to prevent JavaScript access to session cookies
SESSION_COOKIE_HTTPONLY = True

SESSION_COOKIE_AGE = 1209600  # 2 weeks

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": (
            "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
        ),
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-gb"

TIME_ZONE = "Europe/London"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATICFILES_DIRS = [
    ("webpack_bundles", os.path.join(BASE_DIR, "webpack_bundles")),
]

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# Webpack configuration
WEBPACK_LOADER = {
    "DEFAULT": {
        "BUNDLE_DIR_NAME": "webpack-bundles/",
        "STATS_FILE": Path(BASE_DIR) / "webpack-stats.json",
    }
}
# Default storage settings, with the staticfiles storage updated.
# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    # ManifestStaticFilesStorage is recommended in production, to prevent
    # outdated JavaScript / CSS assets being served from cache
    # (e.g. after a Wagtail upgrade).
    # See https://docs.djangoproject.com/en/5.0/ref/contrib/staticfiles/#manifeststaticfilesstorage
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.ManifestStaticFilesStorage",
    },
}

CRISPY_ALLOWED_TEMPLATE_PACKS = ["gds"]
CRISPY_TEMPLATE_PACK = "gds"
CRISPY_GDS_FRONTEND_VERSION = "5.0.0"

S3_ENDPOINTS_FROM_AWS_ENV = os.getenv("S3_ENDPOINTS_FROM_AWS_ENV", "false").lower() in (
    "true",
    "1",
    "yes",
)
S3_ENDPOINTS = {
    "default": None,  # AWS configured credentials
}
